/* (c) https://github.com/MontiCore/monticore */
package de.monticore.sc;

component grammar SCCore extends de.monticore.sc.SCBasis,
                                        de.monticore.types.MCBasicTypes,
                                        de.monticore.UMLStereotype,
                                        de.monticore.expressions.ExpressionsBasis {

  scope SCArtifact =
    ("package" package:(Name& || ".")+ ";")?
    MCImportStatement*
    Statechart
  ;

  symbol scope Statechart =
    SCCompleteness? Stereotype?
    "statechart" Name?
    ("for" className:MCObjectType)?
    ("refines" superSC:MCObjectType)?
    "{" SCStatechartElement* "}";

  symbol SCState implements SCStateElement, SCStatechartElement =
     SCCompleteness? SCModifier "state" Name SCSBody?;

  SCTransition implements SCStateElement, SCStatechartElement =
    Stereotype? sourceName:Name "->" targetName:Name SCTBody?
  ;

  SCCompleteness = complete:["(c)"] | incomplete:["(...)"];

  SCModifier = Stereotype? (["initial"] | ["final"] | ["local"])*;
}
